"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[380],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),b=c(r),f=o,h=b["".concat(s,".").concat(f)]||b[f]||p[f]||i;return r?n.createElement(h,a(a({ref:t},l),{},{components:r})):n.createElement(h,a({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=b;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},7339:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const i={title:"1. Quickstart Walkthrough",slug:"/"},a=void 0,u={unversionedId:"tutorials/001/intro",id:"tutorials/001/intro",title:"1. Quickstart Walkthrough",description:"- Quickstart for GitHub Actions",source:"@site/docs/tutorials/001/1-intro.md",sourceDirName:"tutorials/001",slug:"/",permalink:"/github-actions/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"1. Quickstart Walkthrough",slug:"/"},sidebar:"mySidebar",next:{title:"2. Code Review",permalink:"/github-actions/tutorials/001/setup"}},s={},c=[{value:"Setup",id:"setup",level:2}],l={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"RESOURCES",type:"info"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/quickstart"},"Quickstart for GitHub Actions")))),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("p",null,"Create ",(0,o.kt)("inlineCode",{parentName:"p"},".github/workflows/001-first-action.yml")," and copy in the following code.Then commit the changes to your repo."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'name: GitHub Actions Demo\nrun-name: ${{ github.actor }} is testing out GitHub Actions \ud83d\ude80\non: [push]\njobs:\n  Explore-GitHub-Actions:\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo "\ud83c\udf89 The job was automatically triggered by a ${{ github.event_name }} event."\n      - run: echo "\ud83d\udc27 This job is now running on a ${{ runner.os }} server hosted by GitHub!"\n      - run: echo "\ud83d\udd0e The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."\n      - name: Check out repository code\n        uses: actions/checkout@v3\n      - run: echo "\ud83d\udca1 The ${{ github.repository }} repository has been cloned to the runner."\n      - run: echo "\ud83d\udda5\ufe0f The workflow is now ready to test your code on the runner."\n      - name: List files in the repository\n        run: |\n          ls ${{ github.workspace }}\n      - run: echo "\ud83c\udf4f This job\'s status is ${{ job.status }}."\n')))}p.isMDXComponent=!0}}]);